{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","input","type","onChange","id","button","Component","ContactList","contacts","onDeleteContact","list","map","listItem","listItemText","onClick","Filter","filterLabel","filterInput","App","filter","addContact","find","contact","alert","newContact","changeFilter","target","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevState","console","log","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6806d113.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1WAUk\",\"filterInput\":\"Filter_filterInput__iIYQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__24oCj\",\"label\":\"ContactForm_label__7RtX6\",\"input\":\"ContactForm_input__3PXB6\",\"button\":\"ContactForm_button__1pmdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__QG2nM\",\"listItem\":\"ContactList_listItem__YF6PW\",\"listItemText\":\"ContactList_listItemText__fQDTR\",\"button\":\"ContactList_button__3AgZR\"};","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n     \r\n    handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n    \r\n    handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  }  \r\n    \r\n    reset() {\r\n    this.setState({\r\n      name: '',\r\n      number: ''\r\n    })\r\n  }\r\n    render() {\r\n        return (\r\n             <form className={s.form}\r\n        onSubmit={this.handleSubmit}>\r\n        <label className={s.label}\r\n          htmlFor={this.nameInputId}>\r\n          Name\r\n          <input \r\n            className = {s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n        <label\r\n          className={s.label}      \r\n          htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            className ={s.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n\r\n        <button\r\n          className={s.button}\r\n          type=\"submit\">\r\n          Add contact\r\n        </button>\r\n                </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li\r\n        className={s.listItem}\r\n        key={id}>\r\n        <span className={s.listItemText}>{name}:</span>\r\n        <span className={s.listItemText}>{number}</span>\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n  \r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./Filter.module.css\";\r\n\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.filterLabel}>\r\n        Find contacts by name\r\n        <input className={s.filterInput} type='text' value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\n\n\n\nclass App extends Component { \n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n  \n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n    \n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      console.log('contacts updated');\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n     if (name === '') {\n      alert(`Введите имя контакта.`);\n      return;\n    }\n\n    if (number === '') {\n      alert(`Введите номер телефона контакта.`);\n      return;\n    }\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`)\n      return;\n    }\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = ({ target }) => {\n    this.setState({ filter: target.value });\n  };\n  \n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n \n  deleteContact = contactId => {\n     this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n     <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={this.addContact}/>\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={this.changeFilter}/>\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact}/>\n      </>\n      );\n    }\n  }\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Filter/Filter.module.css","redux/actions.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","changeFilter","contactsActions","deleteContact","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","text","includes","getFiteredContacts","ContactForm","useState","setName","setNumber","nameInputId","numberInputId","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","className","s","form","onSubmit","preventDefault","find","contact","alert","label","htmlFor","input","type","onChange","button","ContactList","list","map","listItem","listItemText","onClick","onDeleteContact","Filter","filterLabel","filterInput","target","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dcef0552.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1WAUk\",\"filterInput\":\"Filter_filterInput__iIYQ9\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst contactsActions = { addContact, deleteContact, changeFilter };\r\nexport default contactsActions;","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const getFiteredContacts = contacts => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(text =>\r\n      text.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  return getFiteredContacts(contacts);\r\n};","import React, { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/actions';\r\nimport { getContacts } from '../../redux/selectors';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n    const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n  \r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n     \r\n    const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n    \r\n   const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (name === '') {\r\n      alert(`Введите имя контакта.`);\r\n      return;\r\n    }\r\n\r\n    if (number === '') {\r\n      alert(`Введите номер телефона`);\r\n      return;\r\n    }\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is in contacts.`);\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsActions.addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n   const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label} htmlFor={nameInputId}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={numberInputId}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n        />\r\n      </label>\r\n\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/actions';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.listItem} key={id}>\r\n          <span className={s.listItemText}>{name}:</span>\r\n          <span className={s.listItemText}>{number}</span>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport contactsActions from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./Filter.module.css\";\r\n\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;","\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport  './App.css'\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__24oCj\",\"label\":\"ContactForm_label__7RtX6\",\"input\":\"ContactForm_input__3PXB6\",\"button\":\"ContactForm_button__1pmdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__QG2nM\",\"listItem\":\"ContactList_listItem__YF6PW\",\"listItemText\":\"ContactList_listItemText__fQDTR\",\"button\":\"ContactList_button__3AgZR\"};"],"sourceRoot":""}